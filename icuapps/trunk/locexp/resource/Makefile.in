# MORE things that should be in Makefile.inc but are only in icudefs.mk
LDLIBRARYPATH_ENVVAR = LD_LIBRARY_PATH
# end


## ******************************************************************************
## *
## *   Copyright (C) 1999-2001, International Business Machines
## *   Corporation and others.  All Rights Reserved.
## *
## *******************************************************************************

srcdir=@srcdir@
top_srcdir=@top_srcdir@
## Build directory information
top_builddir = ../..
subdir = locexp/resource

# srcdir must be set before this is included
include $(top_builddir)/icuapps.mk
-include $(shell $(ICU_CONFIG) --incfile) 

# the 'locexp' directory lives inside the exported ICU data dir..
lxdatadir= $(libdir)/$(PACKAGE)/$(VERSION)/locexp

PKG=locexp
PKGMODE=dll
OUT= out

## Extra files to remove for 'make clean'
CLEANFILES = *~ *.res  escapeABundle

# DEPS = $(OBJECTS:.o=.d)

# source files which are generated
GENSRC = root.txt index.txt

# resource files
# AUTOGEN - source whose encoding is detected
AUTOGENSRC = de.txt en.txt mt.txt el.txt ja.txt ru.txt it.txt fr.txt ta.txt hi.txt es.txt  zh.txt

# ones which have a BOM can just go here
SRC    = th.txt sr.txt zh_TW.txt zh_SG.txt $(AUTOGENSRC)

ALLSRC = $(SRC) $(GENSRC)
RES_SHORT = $(ALLSRC:.txt=.res)
RES=$(RES_SHORT:%=$(PKG)_%)

# C Source files to extract FSWF strings from.  Remove items from here during development to not require a recompile.  
FSWF_SRC= ../calexp.c ../cgimain.c ../fcgimain.c ../locexp.c ../lxconv.c ../lxdate.c ../lxlocale.c ../lxnum.c ../lxprint.c ../lxrun.c ../lxshow.c ../lxshowloc.c  ../srchexp.c ../wfobject.c  ../lxsort.c ../lxcgi.c

$(PKG)_%.res : %.txt
	@echo Rebuilding $@
	@$(INVOKE) $(GENRB) -d. --package-name $(PKG) $<

## List of phony targets
.PHONY : all all-local install install-local clean clean-local \
distclean distclean-local dist dist-local check check-local res-local

## Clear suffix list
.SUFFIXES :

-include Makefile.local

## List of standard targets
all:  Makefile all-local
install:  install-local
clean:  clean-local
distclean :  distclean-local
dist:  dist-local
check:  check-local

all-local: res-local root_SAMPLE.txt

res-local: Makefile.res $(RES) $(OUT)/locexp.lst 
	$(INVOKE) $(PKGDATA) -p $(PKG)  -m $(PKGMODE) -v -c -d $(OUT) -T $(OUT) $(OUT)/locexp.lst

Makefile.res: Makefile.in detectEncodings.sh $(AUTOGENSRC)
	sh ./detectEncodings.sh  $(PKG) $(AUTOGENSRC)

-include Makefile.res

root.txt: $(FSWF_SRC) root.txt.inc ../tools/extractStrings.sh
	$(INVOKE) PATH=../tools:$(bindir):$(sbindir):$(PATH) extractStrings.sh $(FSWF_SRC) > ../resource/root.txt || ( rm -f root.txt ; false )

index.txt: Makefile.in $(SRC) ../tools/genIndex.sh
	sh ../tools/genIndex.sh $(SRC) root.txt > index.txt

install-local: install-res

$(OUT)/locexp.lst: Makefile
	@$(MKINSTALLDIRS) $(OUT)
	@-$(RMV) $@
	@for file in $(RES); do \
	  echo `pwd`/$$file >> $@; \
	done;

install-res:
	$(INVOKE) $(PKGDATA) -p $(PKG)  -m $(PKGMODE) -v -c -d $(OUT) -T $(OUT) $(OUT)/locexp.lst -I $(libdir)

dist-local:

clean-local:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	rm -f $(GENSRC)
	rm -rf $(OUT)

distclean-local: clean-local
	rm -f Makefile 

check-local:

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	 && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

#sr.txt:  sr.utf16.txt escapeABundle
#	../../uconv/uconv -f utf-16le -t utf-16be < sr.utf16.txt | escapeABundle > sr.txt || rm -f sr.txt

$(PKG)_sr.res : sr.txt
	echo Rebuilding $@ - utf-16le
	$(INVOKE)  $(GENRB) --package-name $(PKG) -d. -eutf-16le $<

escapeABundle: escapeABundle.c
	cc -o escapeABundle escapeABundle.c


root_SAMPLE.txt: root.txt
	echo "// Generated copy of root.txt. Also look at 'en.txt'." > root_SAMPLE.txt
	cat < root.txt >> root_SAMPLE.txt

