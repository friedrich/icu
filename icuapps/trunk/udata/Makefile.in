## Makefile.in for ICU - example/usort/lib
## Steven  R. Loomis

srcdir=@srcdir@
top_srcdir=@top_srcdir@

# srcdir must be set before this is included
include @ICU_MAKEFILE@

## Build directory information
top_builddir = ..
subdir = udata

## Extra files to remove for 'make clean'
CLEANFILES = *~

# if you don't have strip or it doesn't work, set this to 'true'
# should come from autoconf!
STRIP= strip

## Target information
LIB_TARGET = libudata.$(SO) 
LIB_OBJECTS = udata.o unames.o
LIB_HEADERS = udata.h unames.h 
LIB_DEPS = $(LIB_OBJECTS:.o=.d)

GEN_TARGET = gennames
GEN_OBJECTS = gennames.o unewdata.o
GEN_DEPS = $(GEN_OBJECTS:.o=.d)

TST_TARGET =  udatatest
TST_OBJECTS = udatatest.o
TST_DEPS = $(TST_OBJECTS:.o=.d)

TARGET = $(LIB_TARGET) $(GEN_TARGET) $(TST_TARGET) genccode
HEADERS = $(LIB_HEADERS)
DEPS = $(GEN_DEPS) $(LIB_DEPS) $(TST_DEPS)
OBJECTS = $(GEN_OBJECTS) $(LIB_OBJECTS) $(TST_OBJECTS)

## List of phony targets
.PHONY : all all-local install install-local clean clean-local \
distclean distclean-local dist dist-local check check-local generate-data install-data

## Clear suffix list
.SUFFIXES :

## List of standard targets
all: all-local
install: install-local
clean: clean-local
distclean : distclean-local
dist: dist-local
check: check-local

all-local: $(TARGET)

mkinstalldirs = $(SHELL) $(sbindir)/mkinstalldirs

install-local: all-local install-headers install-library generate-data install-data
	$(INSTALL) genccode $(sbindir)/genccode

install-library: all-local
	$(mkinstalldirs) $(libdir)
	$(INSTALL) $(LIB_TARGET) $(libdir)/$(LIB_TARGET)


#install all hdrs at once
install-headers:
	$(mkinstalldirs) $(includedir)
	@list='$(HEADERS)'; for file in $$list; do \
	 echo " $(INSTALL_DATA) $$file $(includedir)/$$file"; \
	 $(INSTALL_DATA) $$file $(includedir)/$$file; \
	done

ICUDATADIR=$(datadir)/$(PACKAGE)/$(VERSION)

UNICODEDATA=$(ICUDATADIR)/UnicodeData-3.0.0.txt

#################################################
#################################################
#           Begin data format choice
#CPPFLAGS += -DUDATA_MAP=1

################# DLL version #############
CPPFLAGS += -DUDATA_DLL=1 -DUDATA_SO_SUFFIX=\".$(SO)\"
LDFLAGS += -ldl

install-data: libicudata.$(SO)
	$(INSTALL) libicudata.$(SO) $(libdir)/$(LIB_TARGET)

libicudata.$(SO): $(ICUDATADIR)/unames.dat ./genccode
	-rm -f $(ICUDATADIR)/*.c
	@for file in `ls $(ICUDATADIR)/*.dat`; do \
	  echo genccode $$file; \
	  ./genccode $$file; \
	done;
	$(COMPILE.c) -o icudata.o $(ICUDATADIR)/*.c
	$(SHLIB.c) -o $@ icudata.o
	-$(STRIP) $@
	-rm -f $(ICUDATADIR)/*.c

################# MMAP version ############
# install-data: generate-data


#           End data format choice
##################################################
##################################################


#install other stuff
generate-data: $(ICUDATADIR)/unames.dat

$(ICUDATADIR)/unames.dat: $(GEN_TARGET) $(LIB_TARGET) $(UNICODEDATA)
	@echo "Generating names.."
	./$(GEN_TARGET) $(UNICODEDATA)

dist-local:

clean-local:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	rm -f $(OBJECTS) $(TARGET)

distclean-local: clean-local
	rm -f Makefile $(DEPS)

check-local:

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	 && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

# ICULIBS includes all standard ICU libraries.
# if we wanted only part of the ICU, we could use (for example) just
#         '$(LIBS) -licu-uc -lusort' ...
$(LIB_TARGET) : $(LIB_OBJECTS)
	$(SHLIB.c) -o $@ $^ $(ICULIBS)

$(GEN_TARGET) : $(GEN_OBJECTS)
	$(LINK.c) -o $@ $^  -L. -ludata $(ICULIBS)

genccode: genccode.c
	$(LINK.c) -o $@ $^ $(ICULIBS)

$(TST_TARGET) : $(TST_OBJECTS)
	$(LINK.cc) -o $@ $^ -L. -ludata $(ICULIBS)

ifneq ($(MAKECMDGOALS),distclean)
-include $(DEPS)
endif




